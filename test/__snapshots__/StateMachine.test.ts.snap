// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "SecretA720EF05": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "Test": Object {
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"Comment\\":\\"A description of my state machine\\",\\"StartAt\\":\\"Read database credentials secret\\",\\"States\\":{\\"Read database credentials secret\\":{\\"Type\\":\\"Task\\",\\"Parameters\\":{\\"SecretId\\":\\"",
              Object {
                "Ref": "SecretA720EF05",
              },
              "\\"},\\"Resource\\":\\"arn:aws:states:::aws-sdk:secretsmanager:getSecretValue\\",\\"Next\\":\\"Parse SecretString\\",\\"ResultPath\\":\\"$.dbSecret\\"},\\"Parse SecretString\\":{\\"Type\\":\\"Pass\\",\\"Next\\":\\"Generate username and password\\",\\"InputPath\\":\\"$.dbSecret\\",\\"Parameters\\":{\\"Value.$\\":\\"States.StringToJson($.SecretString)\\"},\\"ResultPath\\":\\"$.dbSecret\\"},\\"Generate username and password\\":{\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:aws:states:::lambda:invoke\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\",\\"FunctionName\\":\\"arn:aws:lambda:us-east-1:536309290949:function:step-functions-with-the-c-GenerateUsernameAndPassw-OZ3vhotMEJPK\\"},\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Next\\":\\"Invoke SQL script against database\\",\\"ResultPath\\":\\"$.usernameAndPassword\\",\\"ResultSelector\\":{\\"Username.$\\":\\"$.Payload.username\\",\\"Password.$\\":\\"$.Payload.password\\"}},\\"Invoke SQL script against database\\":{\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:aws:states:::lambda:invoke\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\",\\"FunctionName\\":\\"arn:aws:lambda:us-east-1:536309290949:function:step-functions-with-the-cdk-ScriptProvider32E26F41-DBeWWSBNMARo\\"},\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Next\\":\\"Generate OTS\\",\\"ResultPath\\":\\"$.invokeOutput\\"},\\"Generate OTS\\":{\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:aws:states:::lambda:invoke\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\",\\"FunctionName\\":\\"arn:aws:lambda:us-east-1:536309290949:function:step-functions-with-the-cdk-GenerateOtsBE7C09B0-nTIEu0OxGURq\\"},\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Next\\":\\"Send email\\",\\"ResultPath\\":\\"$.ots\\",\\"ResultSelector\\":{\\"OtsUrl.$\\":\\"$.Payload.otsUrl\\"}},\\"Send email\\":{\\"Type\\":\\"Task\\",\\"End\\":true,\\"Parameters\\":{\\"FromEmailAddress\\":\\"matthew.bonig@gmail.com\\",\\"Content\\":{\\"Simple\\":{\\"Body\\":{\\"Html\\":{\\"Data\\":\\"You're getting new creds!\\"},\\"Text\\":{\\"Data\\":\\"You're getting new creds!\\"}},\\"Subject\\":{\\"Data\\":\\"You're getting new creds!\\"}}},\\"Destination\\":{\\"ToAddresses.$\\":\\"States.Array($.email)\\"}},\\"Resource\\":\\"arn:aws:states:::aws-sdk:sesv2:sendEmail\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "TestRole280D8E72",
            "Arn",
          ],
        },
        "StateMachineName": "A nice state machine",
        "StateMachineType": "STANDARD",
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "TestRole280D8E72": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchEventsFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
